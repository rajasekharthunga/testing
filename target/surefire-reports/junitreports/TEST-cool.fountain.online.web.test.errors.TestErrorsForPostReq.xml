<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Chaipoints-MacBook-Air.local" name="cool.fountain.online.web.test.errors.TestErrorsForPostReq" tests="33" failures="0" timestamp="8 Jan 2020 10:38:21 GMT" time="3.411" errors="4">
  <testcase name="testErrorCode" time="0.081" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.070" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testBadRequest" time="0.065" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.086" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.077" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.062" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.076" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.085" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.108" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testBadRequest" time="0.112" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.094" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.088" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testBadRequest" time="0.637" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq">
    <error type="java.lang.AssertionError" message="Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;200 OK&gt;

&gt; POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/order/history
&gt; WebTestClient-Request-Id: [1]
&gt; service.auth.key: [1234567]
&gt; Content-Type: [application/json]
&gt; Content-Length: [23]

{
  &quot;moduleId&quot;:1.5990
}

&lt; 200 OK OK
&lt; Date: [Wed, 08 Jan 2020 10:36:45 GMT]
&lt; Content-Type: [application/json;charset=UTF-8]
&lt; Transfer-Encoding: [chunked]
&lt; Connection: [keep-alive]
&lt; Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
&lt; Access-Control-Allow-Credentials: [true]
&lt; Access-Control-Max-Age: [86400]
&lt; X-Content-Type-Options: [nosniff]
&lt; X-XSS-Protection: [1; mode=block]
&lt; Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
&lt; Pragma: [no-cache]
&lt; Expires: [0]
&lt; X-Frame-Options: [DENY]

{&quot;errorCode&quot;:&quot;INTERNAL_ERROR_OCCURED&quot;,&quot;message&quot;:&quot; Could not fetch orders&quot;}
">
      <![CDATA[java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>

> POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/order/history
> WebTestClient-Request-Id: [1]
> service.auth.key: [1234567]
> Content-Type: [application/json]
> Content-Length: [23]

{
  "moduleId":1.5990
}

< 200 OK OK
< Date: [Wed, 08 Jan 2020 10:36:45 GMT]
< Content-Type: [application/json;charset=UTF-8]
< Transfer-Encoding: [chunked]
< Connection: [keep-alive]
< Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
< Access-Control-Allow-Credentials: [true]
< Access-Control-Max-Age: [86400]
< X-Content-Type-Options: [nosniff]
< X-XSS-Protection: [1; mode=block]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Frame-Options: [DENY]

{"errorCode":"INTERNAL_ERROR_OCCURED","message":" Could not fetch orders"}

	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:200)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at cool.fountain.online.web.test.errors.TestErrorsForPostReq.testBadRequest(TestErrorsForPostReq.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1194)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:197)
	... 38 more
]]>
    </error>
  </testcase> <!-- testBadRequest -->
  <testcase name="testErrorCode" time="0.074" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.062" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.076" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.110" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.178" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.088" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq">
    <error type="java.lang.AssertionError" message="Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;200 OK&gt;

&gt; POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/event/heartbeat
&gt; Content-Length: [54]
&gt; WebTestClient-Request-Id: [1]
&gt; service.auth.key: [1234567]
&gt; Content-Type: [application/json]

{
  &quot;terminalId&quot;: &quot;terminal_1&quot;,
  &quot;timestamp&quot;: 12.34
}

&lt; 200 OK OK
&lt; Date: [Wed, 08 Jan 2020 10:36:03 GMT]
&lt; Content-Type: [application/json;charset=UTF-8]
&lt; Transfer-Encoding: [chunked]
&lt; Connection: [keep-alive]
&lt; Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
&lt; Access-Control-Allow-Credentials: [true]
&lt; Access-Control-Max-Age: [86400]
&lt; X-Content-Type-Options: [nosniff]
&lt; X-XSS-Protection: [1; mode=block]
&lt; Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
&lt; Pragma: [no-cache]
&lt; Expires: [0]
&lt; X-Frame-Options: [DENY]

{&quot;errorCode&quot;:&quot;INVALID_TERMINAL_ID&quot;,&quot;message&quot;:&quot;Invalid TerminalId, Please provide a valid terminal ID&quot;}
">
      <![CDATA[java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>

> POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/event/heartbeat
> Content-Length: [54]
> WebTestClient-Request-Id: [1]
> service.auth.key: [1234567]
> Content-Type: [application/json]

{
  "terminalId": "terminal_1",
  "timestamp": 12.34
}

< 200 OK OK
< Date: [Wed, 08 Jan 2020 10:36:03 GMT]
< Content-Type: [application/json;charset=UTF-8]
< Transfer-Encoding: [chunked]
< Connection: [keep-alive]
< Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
< Access-Control-Allow-Credentials: [true]
< Access-Control-Max-Age: [86400]
< X-Content-Type-Options: [nosniff]
< X-XSS-Protection: [1; mode=block]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Frame-Options: [DENY]

{"errorCode":"INVALID_TERMINAL_ID","message":"Invalid TerminalId, Please provide a valid terminal ID"}

	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:200)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at cool.fountain.online.web.test.errors.TestErrorsForPostReq.testErrorCode(TestErrorsForPostReq.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1194)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:197)
	... 38 more
]]>
    </error>
  </testcase> <!-- testErrorCode -->
  <testcase name="testBadRequest" time="0.130" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.076" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq">
    <error type="java.lang.AssertionError" message="Status expected:&lt;400 BAD_REQUEST&gt; but was:&lt;200 OK&gt;

&gt; POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/event/heartbeat
&gt; WebTestClient-Request-Id: [1]
&gt; service.auth.key: [1234567]
&gt; Content-Type: [application/json]
&gt; Content-Length: [46]

{
  &quot;terminalId&quot;: &quot;abc&quot;,
  &quot;timestamp&quot;: 1234
}

&lt; 200 OK OK
&lt; Date: [Wed, 08 Jan 2020 10:35:43 GMT]
&lt; Content-Type: [application/json;charset=UTF-8]
&lt; Transfer-Encoding: [chunked]
&lt; Connection: [keep-alive]
&lt; Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
&lt; Access-Control-Allow-Credentials: [true]
&lt; Access-Control-Max-Age: [86400]
&lt; X-Content-Type-Options: [nosniff]
&lt; X-XSS-Protection: [1; mode=block]
&lt; Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
&lt; Pragma: [no-cache]
&lt; Expires: [0]
&lt; X-Frame-Options: [DENY]

{&quot;errorCode&quot;:&quot;INVALID_TERMINAL_ID&quot;,&quot;message&quot;:&quot;Invalid TerminalId, Please provide a valid terminal ID&quot;}
">
      <![CDATA[java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>

> POST https://testing.chaipoint.com/qa3/outlet-pos-api/api/event/heartbeat
> WebTestClient-Request-Id: [1]
> service.auth.key: [1234567]
> Content-Type: [application/json]
> Content-Length: [46]

{
  "terminalId": "abc",
  "timestamp": 1234
}

< 200 OK OK
< Date: [Wed, 08 Jan 2020 10:35:43 GMT]
< Content-Type: [application/json;charset=UTF-8]
< Transfer-Encoding: [chunked]
< Connection: [keep-alive]
< Access-Control-Allow-Headers: [Content-Type, Cookie, service.auth.key]
< Access-Control-Allow-Credentials: [true]
< Access-Control-Max-Age: [86400]
< X-Content-Type-Options: [nosniff]
< X-XSS-Protection: [1; mode=block]
< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]
< Pragma: [no-cache]
< Expires: [0]
< X-Frame-Options: [DENY]

{"errorCode":"INVALID_TERMINAL_ID","message":"Invalid TerminalId, Please provide a valid terminal ID"}

	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:200)
	at org.springframework.test.web.reactive.server.StatusAssertions.assertStatusAndReturn(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.StatusAssertions.isBadRequest(StatusAssertions.java:131)
	at cool.fountain.online.web.test.errors.TestErrorsForPostReq.testErrorCode(TestErrorsForPostReq.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1194)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.lang.AssertionError: Status expected:<400 BAD_REQUEST> but was:<200 OK>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.web.reactive.server.StatusAssertions.lambda$assertStatusAndReturn$4(StatusAssertions.java:227)
	at org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:197)
	... 38 more
]]>
    </error>
  </testcase> <!-- testErrorCode -->
  <testcase name="testErrorCode" time="0.064" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.111" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.082" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.069" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.062" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq">
    <error type="java.lang.AssertionError" message="JSON path &quot;$.errorCode&quot; expected:&lt;INVALID_REQUEST&gt; but was:&lt;INVALID_TERMINAL_MODULE_ID&gt;">
      <![CDATA[java.lang.AssertionError: JSON path "$.errorCode" expected:<INVALID_REQUEST> but was:<INVALID_TERMINAL_MODULE_ID>
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:55)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:82)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:116)
	at org.springframework.test.web.reactive.server.JsonPathAssertions.isEqualTo(JsonPathAssertions.java:53)
	at cool.fountain.online.web.test.errors.TestErrorsForPostReq.testErrorCode(TestErrorsForPostReq.java:62)
	at sun.reflect.GeneratedMethodAccessor49.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:180)
	at sun.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1194)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
    </error>
  </testcase> <!-- testErrorCode -->
  <testcase name="testErrorCode" time="0.090" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.085" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.083" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testServiceAuthKey" time="0.061" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testBadRequest" time="0.087" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.110" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
  <testcase name="testErrorCode" time="0.072" classname="cool.fountain.online.web.test.errors.TestErrorsForPostReq"/>
</testsuite> <!-- cool.fountain.online.web.test.errors.TestErrorsForPostReq -->
